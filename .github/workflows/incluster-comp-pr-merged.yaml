name: pr-merged
on:
  push:
    paths-ignore:
      - '**.md' ### Ignore running when README.MD changed.
      
jobs:
  docker-build:
    if: ${{ (contains(github.event.pull_request.labels.*.name, 'release') || contains( github.event.pull_request.labels.*.name, 'trigger-integration-test')) && github.repository_owner == 'kubescape' }}  
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG_PRERELEASE: ${{ steps.image-prerelease-tag.outputs.IMAGE_TAG_PRERELEASE }}
      TEST_NAMES: ${{ steps.export_tests_to_env.outputs.TEST_NAMES }}
    permissions:
      id-token: write
      packages: write
      contents: read    
      pull-requests: read  

    steps:

      - uses: actions/checkout@v3
        name: Checkout
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        name: Installing go
        with:
          go-version: 1.20

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
 
      - name: Run unit test
        id: unit-test
        run: go test -v ./...
      
      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_REGISTRY_USERNAME }}
          password: ${{ secrets.QUAYIO_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: build/Dockerfile
          tags: quay.io/${{ github.repository_owner }}/node-agent:v0.1.${{ github.run_number }}
          build-args: image_version="v0.1.${{ github.run_number }}"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
  
 
  create-release-and-retag:
    name: Docker retag and create release
    needs: [run-tests, docker-build]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-latest  
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.11.1
        with:
          token:  ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.IMAGE_TAG }}
          name: Release ${{ inputs.IMAGE_TAG }}
          draft: false
          prerelease: false
          body: ${{ github.event.pull_request.body }}

 